{
  "swagger": "2.0",
  "info": {
    "title": "ppUnit",
    "description": "ppUnit is a unit-testing framework for all Power Platform connectors.",
    "version": "1.0",
    "contact": {
      "name": "Improving",
      "url": "https://improving.com",
      "email": "joe.brinkman@improving.com"
    }
  },
  "host": "api.ppunit.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/resulturl": {
      "post": {
        "summary": "Get Results Url",
        "description": "Returns the URL for the result of running a given Flow.",
        "operationId": "GetResultsUrl",
        "parameters": [
          {
            "$ref": "#/parameters/WorkflowParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultsUrl"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/assertall": {
      "post": {
        "summary": "Assert All",
        "description": "Asserts all conditions are met.",
        "operationId": "AssertAll",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Assertion": {
                  "$ref": "#/definitions/Assertion",
                  "description": "Definition of an assertion to be made.",
                  "title": "Assertion"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/assertequal": {
      "post": {
        "summary": "Assert Equal",
        "description": "Asserts that two values are equal.",
        "operationId": "AssertEqual",
        "parameters": [
          {
            "$ref": "#/parameters/EqualityParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/assertnotequal": {
      "post": {
        "summary": "Assert Not Equal",
        "description": "Asserts that two values are not equal.",
        "operationId": "AssertNotEqual",
        "parameters": [
          {
            "$ref": "#/parameters/EqualityParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/asserttrue": {
      "post": {
        "summary": "Assert True",
        "description": "Asserts that a value equates to true.",
        "operationId": "AssertTrue",
        "parameters": [
          {
            "$ref": "#/parameters/BooleanParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    },
    "/assertfalse": {
      "post": {
        "summary": "Assert False",
        "description": "Asserts that a value equates to false.",
        "operationId": "AssertFalse",
        "parameters": [
          {
            "$ref": "#/parameters/BooleanParams"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ResultsUrl": {
      "type": "object",
      "properties": {
        "resultUrl": {
          "type": "string",
          "description": "The URL to the flow results",
          "title": "resultUrl"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "description": "The result of the assertion.",
          "title": "statusCode"
        },
        "statusMessage": {
          "type": "string",
          "description": "The message to return.",
          "title": "statusMessage"
        }
      }
    },
    "Assertion": {
      "type": "object",
      "description": "Definition of an assertion to be made.",
      "title": "Assertion",
      "properties": {
        "LogicalOperator": {},
        "Assertions": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "title": "Assertions",
          "description": "List of assertions"
        },
        "LeftExpression": {
          "type": "object",
          "description": "LeftExpression",
          "title": "LeftExpression"
        },
        "RightExpression": {
          "type": "object",
          "description": "",
          "title": "RightExpression"
        },
        "Operator": {
          "type": "string",
          "description": "",
          "title": "Operator"
        },
        "ErrorMessage": {
          "type": "string",
          "description": "",
          "title": "ErrorMessage"
        },
        "Negate": {
          "type": "boolean",
          "description": "Equivalent to using a NOT in front a given assertion.",
          "title": "Negate"
        }
      }
    }
  },
  "parameters": {
    "WorkflowParams": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "workflow": {
            "type": "string",
            "description": "Use the workflow() function to get the current workflow.",
            "title": "Workflow"
          }
        }
      }
    },
    "EqualityParams": {
      "name": "body",
      "in": "body",
      "schema": {
        "type": "object",
        "properties": {
          "actual": {
            "type": "string",
            "description": "The actual value.",
            "title": "actual"
          },
          "expected": {
            "type": "string",
            "description": "The expected value.",
            "title": "expected"
          },
          "failureCode": {
            "type": "integer",
            "description": "The code to return if the assertion fails.",
            "title": "failureCode",
            "default": 417,
            "x-ms-visibility": "advanced"
          },
          "failureMessage": {
            "type": "string",
            "description": "The message to return if the assertion fails.",
            "title": "failureMessage",
            "default": "Assertion failed.",
            "x-ms-visibility": "advanced"
          }
        },
        "required": ["actual", "expected"]
      }
    },
    "BooleanParams": {
      "name": "body",
      "in": "body",
      "schema": {
        "type": "object",
        "properties": {
          "actual": {
            "type": "string",
            "description": "The actual value.",
            "title": "actual"
          },
          "failureCode": {
            "type": "integer",
            "description": "The code to return if the assertion fails.",
            "title": "failureCode",
            "default": 400,
            "x-ms-visibility": "advanced"
          },
          "failureMessage": {
            "type": "string",
            "description": "The message to return if the assertion fails.",
            "title": "failureMessage",
            "default": "Assertion failed.",
            "x-ms-visibility": "advanced"
          }
        },
        "required": ["actual"]
      }
    }
  },
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.snowflake.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.snowflake.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}
